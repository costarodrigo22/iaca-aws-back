org: studyaws
service: chaparral

build:
  esbuild:
    minify: true
    bundle: true
    sourcemap: false
    exclude:
      - "@aws-sdk/*"

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  architecture: arm64
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cognito-idp:AdminGetUser
          Resource: !GetAtt ChaparralUserPool.Arn
        - Effect: Allow
          Action:
            - dynamodb:PutItem
          Resource: !GetAtt AccountsTable.Arn
        - Effect: Allow
          Action:
            - dynamodb:UpdateItem
          Resource: !GetAtt AccountsTable.Arn
        - Effect: Allow
          Action:
            - dynamodb:Query
          Resource: !GetAtt AccountsTable.Arn
        - Effect: Allow
          Action:
            - dynamodb:DeleteItem
          Resource: !GetAtt AccountsTable.Arn
  deploymentMethod: direct
  environment:
    COGNITO_CLIENT_ID: !Ref ChaparralUserPoolClient
    COGNITO_POOL_ID: !Ref ChaparralUserPool
  httpApi:
    cors:
      allowOrigins:
        - "*"
    authorizers:
      CognitoAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl: !GetAtt ChaparralUserPool.ProviderURL
        audience:
          - !Ref ChaparralUserPoolClient

resources:
  Resources:
    ChaparralUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ChaparralUserPool
        MfaConfiguration: OFF
        AutoVerifiedAttributes:
          - email
        AdminCreateUserConfig:
          AllowAdminCreateUserOnly: false
        UsernameAttributes:
          - email
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email
              Priority: 1
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: false
            RequireNumbers: false
            RequireSymbols: false
            RequireUppercase: false
            TemporaryPasswordValidityDays: 10
        Schema:
          - Name: given_name
            Mutable: true
            Required: true
            AttributeDataType: String
          - Name: phone_number
            Mutable: true
            Required: true
            AttributeDataType: String
          - Name: email
            Mutable: true
            Required: true
            AttributeDataType: String
    ChaparralUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ChaparralUserPoolClient
        UserPoolId: !Ref ChaparralUserPool
        ExplicitAuthFlows:
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        TokenValidityUnits:
          AccessToken: hours
          RefreshToken: hours
        AccessTokenValidity: 24
        RefreshTokenValidity: 1440 #60 days
    AccountsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: AccountsTable
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

functions:
  signUp:
    handler: src/functions/auth/signUp.handler
    events:
      - httpApi:
          path: /auth/sign-up
          method: POST
  accountConfirmation:
    handler: src/functions/auth/accountConfirmation.handler
    events:
      - httpApi:
          method: POST
          path: /auth/account-confirmation
  signIn:
    handler: src/functions/auth/signIn.handler
    events:
      - httpApi:
          method: POST
          path: /auth/sign-in
  refreshToken:
    handler: src/functions/auth/refreshToken.handler
    events:
      - httpApi:
          method: POST
          path: /auth/refresh-token
  forgotPassword:
    handler: src/functions/auth/forgotPassword.handler
    events:
      - httpApi:
          method: POST
          path: /auth/forgot-password
  resetPassword:
    handler: src/functions/auth/resetPassword.handler
    events:
      - httpApi:
          method: POST
          path: /auth/reset-password
  profile:
    handler: src/functions/user/profile.handler
    events:
      - httpApi:
          method: GET
          path: /user/profile
          authorizer:
            name: CognitoAuthorizer
  addItemToCart:
    handler: src/functions/user/addItemToCart.handler
    events:
      - httpApi:
          method: POST
          path: /user/cart
          authorizer:
            name: CognitoAuthorizer
  updateQuantityProductToCart:
    handler: src/functions/user/updateQuantityProductToCart.handler
    events:
      - httpApi:
          method: PUT
          path: /user/cart
          authorizer:
            name: CognitoAuthorizer
  getCartItems:
    handler: src/functions/user/getCartItems.handler
    events:
      - httpApi:
          method: GET
          path: /user/cart
          authorizer:
            name: CognitoAuthorizer
  deleteCartItem:
    handler: src/functions/user/deleteCartItem.handler
    events:
      - httpApi:
          method: DELETE
          path: /user/cart/{productCode}
          authorizer:
            name: CognitoAuthorizer
  addAddress:
    handler: src/functions/user/address/addAddress.handler
    events:
      - httpApi:
          method: POST
          path: /user/address
          authorizer:
            name: CognitoAuthorizer
  getAddress:
    handler: src/functions/user/address/getAddress.handler
    events:
      - httpApi:
          method: GET
          path: /user/address
          authorizer:
            name: CognitoAuthorizer
  deleteAddress:
    handler: src/functions/user/address/deleteAddress.handler
    events:
      - httpApi:
          method: DELETE
          path: /user/address/{addressId}
          authorizer:
            name: CognitoAuthorizer
  updateAddress:
    handler: src/functions/user/address/updateAddress.handler
    events:
      - httpApi:
          method: PUT
          path: /user/address
          authorizer:
            name: CognitoAuthorizer
  selecteAddress:
    handler: src/functions/user/address/selecteAddress.handler
    events:
      - httpApi:
          method: POST
          path: /user/address/select
          authorizer:
            name: CognitoAuthorizer
  deselectAllAddresses:
    handler: src/functions/user/address/deselectAllAddresses.handler
    events:
      - httpApi:
          method: GET
          path: /user/address/deselectAllAddresses
          authorizer:
            name: CognitoAuthorizer
  getSelectedAddress:
    handler: src/functions/user/address/getSelectedAddress.handler
    events:
      - httpApi:
          method: GET
          path: /user/address/select
          authorizer:
            name: CognitoAuthorizer
  createOrder:
    handler: src/functions/user/orders/createOrder.handler
    events:
      - httpApi:
          method: POST
          path: /user/order
          authorizer:
            name: CognitoAuthorizer
  getOrders:
    handler: src/functions/user/orders/getOrders.handler
    events:
      - httpApi:
          method: GET
          path: /user/order
          authorizer:
            name: CognitoAuthorizer
